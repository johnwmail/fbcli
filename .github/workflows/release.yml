name: Release fbcli

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          BINARY_NAME="fbcli"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="fbcli.exe"
          fi
          go build -v -o "${BINARY_NAME}"
          
          ASSET_NAME="fbcli-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip "${ASSET_NAME}.zip" "${BINARY_NAME}"
          else
            tar -czvf "${ASSET_NAME}.tar.gz" "${BINARY_NAME}"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fbcli-artifacts
          path: |
            fbcli-*.tar.gz
            fbcli-*.zip
          retention-days: 1

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-and-release
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          name: fbcli-artifacts
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for file in artifacts/*; do
            echo "Uploading $file..."
            gh release upload ${{ github.ref }} "$file" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
